<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:local="clr-namespace:UIEditor"
					xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#FF3399FF"/>
	<Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
		<Setter Property="Padding" Value="4,4,4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
		<Setter Property="Background" Value="{StaticResource Background}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<WrapPanel x:Name="HeaderPanel"
								   Grid.Column="0"
								   Grid.Row="0"
								   IsItemsHost="true"
								   KeyboardNavigation.TabIndex="1"
								   Panel.ZIndex="1"
								   Margin="2,2,2,0"/>
						<Border x:Name="ContentPanel"
								Grid.Column="0"
								Grid.Row="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								KeyboardNavigation.DirectionalNavigation="Contained"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost"
											  ContentSource="SelectedContent"
											  Margin="{TemplateBinding Padding}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TmplFileItem" TargetType="{x:Type TabItem}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid SnapsToDevicePixels="True">
						<Border x:Name="Bd"
							Background="{StaticResource Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Padding="5,2,5,2"
							BorderThickness="0">
							<ContentPresenter x:Name="Content"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
									Content="{TemplateBinding Header}"
									ContentStringFormat="{TemplateBinding HeaderStringFormat}"
									ContentSource="Header"
									HorizontalAlignment="{
											Binding HorizontalContentAlignment, RelativeSource=
											{
												RelativeSource FindAncestor, AncestorLevel=1, AncestorType=
												{
													x:Type ItemsControl
												}
											}
										}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{
											Binding VerticalContentAlignment, RelativeSource=
											{
												RelativeSource FindAncestor, AncestorLevel=1, AncestorType=
												{
													x:Type ItemsControl
												}
											}
										}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="#FF88BBFF"/>
							<Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{StaticResource Foreground}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Background" TargetName="Bd" Value="#FF3399FF"/>
							<Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{StaticResource Foreground}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="Bd" Value="#FF3C7FB1"/>
						</MultiTrigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<!-- <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/> -->
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<!-- <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/> -->
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<!-- <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/> -->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-2,-1"/>
							<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							<!-- <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,1,0"/> -->
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-1,-2,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-1,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1,-2,-2,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bd" Value="#FFF4F4F4"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="#FFC9C7BA"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
	<Style x:Key="CheckRadioFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0"
							   SnapsToDevicePixels="true"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeThickness="1"
							   StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToggleButtonTeml_Tools" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource StandardToggleButton}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<BulletDecorator Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Background" Value="#ff508aff"/>
							<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="false">
							<Setter Property="Background" Value="{StaticResource Background}"/>
							<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"></Condition>
								<Condition Property="IsChecked" Value="false"></Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false"></Condition>
								<Condition Property="IsChecked" Value="false"></Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource Background}"/>
						</MultiTrigger>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
	</Style>
	<Style TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
	</Style>
	<Style TargetType="{x:Type ToolBar}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
	</Style>
	<Style TargetType="{x:Type StackPanel}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
	</Style>
	<Style TargetType="{x:Type WrapPanel}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
	</Style>
	<Style TargetType="{x:Type DockPanel}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
	</Style>
	<Style TargetType="{x:Type TreeView}">
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
	</Style>
	<Style TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
	</Style>
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
	</Style>
	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
	</Style>
	<Style TargetType="{x:Type RichTextBox}">
		<!--
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
		<Setter Property="Background" Value="{StaticResource Background}"/>
		-->
	</Style>
	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ToggleButtonTeml_Tools}">
		<Setter Property="Background" Value="{StaticResource Background}"/>
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
	</Style>
	<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource TabControlStyle1}"/>
	<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TmplFileItem}"/>
	<ControlTemplate x:Key="ToolBar_Template_UIEditor" TargetType="{x:Type ToolBar}">
		<Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
			<Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
				<ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}">
					<ToggleButton.Style>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
							<Setter Property="MinHeight" Value="0"/>
							<Setter Property="MinWidth" Value="0"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="True">
											<Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
												<!--<Path Data="M1,1.5L6,1.5" Stroke="White"/>-->
												<Path Data="M0,0.5L5,0.5" Stroke="{StaticResource Foreground}"/>
												<!--<Path Data="M0.5,4L6.5,4 3.5,7z" Fill="White"/>-->
												<Path Data="M-0.5,3L5.5,3 2.5,6z" Fill="{StaticResource Foreground}"/>
											</Canvas>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" TargetName="Bd" Value="#FFC2E0FF"/>
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="True">
												<Setter Property="Background" TargetName="Bd" Value="#FFC2E0FF"/>
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="#FFC6C3C6"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<DataTrigger Binding="{Binding}" Value="true">
									<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</ToggleButton.Style>
				</ToggleButton>
				<Popup x:Name="OverflowPopup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="False">
					<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
						<Border x:Name="ToolBarSubMenuBorder" BorderBrush="Gray" BorderThickness="1" Background="#FFFDFDFD" RenderOptions.ClearTypeHint="Enabled">
							<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
			</Grid>
			<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
				<Border.Style>
					<Style TargetType="{x:Type Border}">
						<Setter Property="Margin" Value="0,0,11,0"/>
						<!--<Setter Property="CornerRadius" Value="3"/>-->
						<Style.Triggers>
							<DataTrigger Binding="{Binding}" Value="true">
								<Setter Property="CornerRadius" Value="0"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>
				<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
					<Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Width="10">
						<Thumb.Style>
							<Style TargetType="{x:Type Thumb}">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Thumb}">
											<Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
												<Rectangle>
													<Rectangle.Fill>
														<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
															<DrawingBrush.Drawing>
																<DrawingGroup>
																	<GeometryDrawing Brush="{StaticResource BackgroundHighlighted}" Geometry="M1,1L1,3 3,3 3,1z"/>
																	<!--<GeometryDrawing Brush="#FFC6C3C6" Geometry="M0,0L0,2 2,2 2,0z"/>-->
																</DrawingGroup>
															</DrawingBrush.Drawing>
														</DrawingBrush>
													</Rectangle.Fill>
												</Rectangle>
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Cursor" Value="SizeAll"/>
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Thumb.Style>
					</Thumb>
					<ContentPresenter x:Name="ToolBarHeader" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</DockPanel>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsOverflowOpen" Value="True">
				<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="False"/>
			</Trigger>
			<Trigger Property="Header" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="ToolBarTray.IsLocked" Value="True">
				<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="True">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
				<Setter Property="Style" TargetName="OverflowButton">
					<Setter.Value>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
										<GradientStop Color="#FFECECEC" Offset="0"/>
										<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
										<GradientStop Color="#FFA0A0A0" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="MinHeight" Value="0"/>
							<Setter Property="MinWidth" Value="0"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="True">
											<Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7">
												<Path Data="M1.5,1L1.5,6" Stroke="White"/>
												<Path Data="M0.5,0L0.5,5" Stroke="{TemplateBinding Foreground}"/>
												<Path Data="M3.5,0.5L7,3.5 4,6.5z" Fill="White"/>
												<Path Data="M3,-0.5L6,2.5 3,5.5z" Fill="{TemplateBinding Foreground}"/>
											</Canvas>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" TargetName="Bd" Value="#FFC2E0FF"/>
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="True">
												<Setter Property="Background" TargetName="Bd" Value="#FFC2E0FF"/>
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="#FFC6C3C6"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<DataTrigger Binding="{Binding}" Value="true">
									<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Setter.Value>
				</Setter>
				<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
				<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
				<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
				<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
				<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
				<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
				<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
				<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
				<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
				<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
				<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
				<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
				<Setter Property="Background">
					<Setter.Value>
						<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
							<GradientStop Color="White" Offset="0"/>
							<GradientStop Color="#FFFFFBFF" Offset="0.5"/>
							<GradientStop Color="#FFF7F7F7" Offset="1"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- http://www.codeproject.com/Tips/673071/WPF-TreeView-with-WinForms-Style-Fomat -->
	<local:TreeViewLineConverter x:Key="LineConverter"/>
	<!-- Toggle Button -->
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Width="15" Height="13" SnapsToDevicePixels="True">
						<!-- Rectangle 9x9 pixels -->
						<Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="Silver" Offset="0.5"/>
									<GradientStop Color="LightGray" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<!-- Vertical line inside rectangle -->
						<Rectangle x:Name="ExpandPath" Width="1" 
                    Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
						<!-- Horizontal line inside rectangle -->
						<Rectangle Width="5" Height="1" 
                    Stroke="Black" SnapsToDevicePixels="true"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility"  
                        TargetName="ExpandPath" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- TreeViewItem -->
	<Style x:Key="WinFormsTreeViewStyle" TargetType="{x:Type TreeViewItem}">
		<!--<Setter Property="Padding" Value="4,2,4,2"/>-->
		<Setter Property="Background" Value="{StaticResource Background}"/>
		<Setter Property="Foreground" Value="{StaticResource Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<!-- Connecting Lines -->
						<!-- Horizontal line -->
						<Rectangle x:Name="HorLn"
								   Margin="9,1,0,0"
								   Height="1"
								   Stroke="#AAFFFFFF"
								   SnapsToDevicePixels="True"/>
						<!-- Vertical line -->
						<Rectangle x:Name="VerLn"
								   Width="1"
								   Stroke="#AAFFFFFF"
								   Margin="0,0,1,0"
								   Grid.RowSpan="2"
								   SnapsToDevicePixels="true"
								   Fill="White"/>
						<!-- Insert Toggle Button -->
						<ToggleButton x:Name="Expander"
									  Margin="-1,0,0,0"
									  Style="{StaticResource ExpandCollapseToggleStyle}"
									  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
									  ClickMode="Press"/>
						<Border Name="Bd"
								Grid.Column="1"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
							<ContentPresenter x:Name="PART_Header"
											  ContentSource="Header"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  MinWidth="20"/>
						</Border>
						<ItemsPresenter x:Name="ItemsHost"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="2"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!-- This trigger changes the connecting lines if the item is the last in the list -->
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
							<Setter TargetName="VerLn" Property="Height" Value="10"/>
							<Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
						</DataTrigger>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="Width" Value="Auto"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="Height" Value="Auto"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource WinFormsTreeViewStyle}"/>
	<Style x:Key="BtnStyle_Tools" TargetType="{x:Type Button}" BasedOn="{StaticResource StandardButton}">
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="{StaticResource BackgroundNormal}"/>
	</Style>
	<Style x:Key="TimeScaleSliderStyle" TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="#FFC4C4C4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
							<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
							<Border x:Name="TrackBackground" BorderThickness="1" Background="#00000000" CornerRadius="1" Height="4" Margin="5,0" Grid.Row="1" VerticalAlignment="Center">
								<Border.BorderBrush>
									<SolidColorBrush Color="#00000000"/>
								</Border.BorderBrush>
								<Canvas Margin="-6,-1">
									<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Visibility="Hidden"/>
								</Canvas>
							</Border>
							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="Slider.DecreaseLarge">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle Fill="Transparent"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="Slider.IncreaseLarge">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle Fill="Transparent"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb">
										<Thumb.Style>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Height" Value="45"/>
												<Setter Property="Width" Value="11"/>
												<Setter Property="Foreground" Value="Gray"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Canvas SnapsToDevicePixels="True">
																<Canvas.RenderTransform>
																	<TransformGroup>
																		<TranslateTransform X="3" Y="11"/>
																		<ScaleTransform ScaleY="2"/>
																	</TransformGroup>
																</Canvas.RenderTransform>
																<Path x:Name="Background" Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z">
																	<Path.Fill>
																		<ImageBrush ImageSource="pack://application:,,,/data/image/timeScaleThumb.png"
																					Viewport="0,0,0.3,1"
																					TileMode="None">
																			<ImageBrush.Transform>
																				<TranslateTransform X="5.5"/>
																			</ImageBrush.Transform>
																		</ImageBrush>
																	</Path.Fill>
																</Path>
																<Path x:Name="InnerBorder" Data="M-4,-9.5L4,-9.5 4,9.5 -4,9.5z" Stroke="#00000000"/>
																<Path x:Name="OuterBorder" Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z" Stroke="#00000000"/>
															</Canvas>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<ImageBrush ImageSource="pack://application:,,,/data/image/timeScaleThumbIsMouseOver.png"
																						Viewport="0,0,0.3,1"
																						TileMode="None">
																				<ImageBrush.Transform>
																					<TranslateTransform X="5.5"/>
																				</ImageBrush.Transform>
																			</ImageBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#00000000"/>
																</Trigger>
																<Trigger Property="Foreground" Value="Blue">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<ImageBrush ImageSource="pack://application:,,,/data/image/timeScaleThumbForeground.png"
																					Viewport="0,0,0.3,1"
																					TileMode="None">
																				<ImageBrush.Transform>
																					<TranslateTransform X="5.5"/>
																				</ImageBrush.Transform>
																			</ImageBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#00000000"/>
																</Trigger>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<ImageBrush ImageSource="pack://application:,,,/data/image/timeScaleThumbIsDragging.png"
																					Viewport="0,0,0.3,1"
																					TileMode="None">
																				<ImageBrush.Transform>
																					<TranslateTransform X="5.5"/>
																				</ImageBrush.Transform>
																			</ImageBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#00000000"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
																	<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
																	<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Thumb.Style>
									</Thumb>
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="TickPlacement" Value="TopLeft">
							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
							<Setter Property="Style" TargetName="Thumb">
								<Setter.Value>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Focusable" Value="False"/>
										<Setter Property="OverridesDefaultStyle" Value="True"/>
										<Setter Property="Height" Value="18"/>
										<Setter Property="Width" Value="10"/>
										<Setter Property="Foreground" Value="Gray"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Canvas SnapsToDevicePixels="True">
														<Canvas.RenderTransform>
															<TransformGroup>
																<RotateTransform Angle="180"/>
																<TranslateTransform X="5" Y="9"/>
															</TransformGroup>
														</Canvas.RenderTransform>
														<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
															<Path.Fill>
																<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
																	<GradientStop Color="White" Offset="0"/>
																	<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
																	<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
																</LinearGradientBrush>
															</Path.Fill>
														</Path>
														<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
														<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
													</Canvas>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Fill" TargetName="Background">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
																		<GradientStop Color="White" Offset="0"/>
																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
														</Trigger>
														<Trigger Property="Foreground" Value="Blue">
															<Setter Property="Fill" TargetName="Background">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
																		<GradientStop Color="White" Offset="0"/>
																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
														</Trigger>
														<Trigger Property="IsDragging" Value="True">
															<Setter Property="Fill" TargetName="Background">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
																		<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
																		<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
																		<GradientStop Color="#FF4C8BB4" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
															<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
															<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
															<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="BottomRight">
							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
							<Setter Property="Style" TargetName="Thumb">
								<Setter.Value>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Focusable" Value="False"/>
										<Setter Property="OverridesDefaultStyle" Value="True"/>
										<Setter Property="Height" Value="18"/>
										<Setter Property="Width" Value="10"/>
										<Setter Property="Foreground" Value="Gray"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Canvas SnapsToDevicePixels="True">
														<Canvas.RenderTransform>
															<TranslateTransform X="5" Y="9"/>
														</Canvas.RenderTransform>
														<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
															<Path.Fill>
																<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																	<GradientStop Color="White" Offset="0"/>
																	<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
																	<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
																</LinearGradientBrush>
															</Path.Fill>
														</Path>
														<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
														<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
													</Canvas>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Fill" TargetName="Background">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																		<GradientStop Color="White" Offset="0"/>
																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
														</Trigger>
														<Trigger Property="Foreground" Value="Blue">
															<Setter Property="Fill" TargetName="Background">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																		<GradientStop Color="White" Offset="0"/>
																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
														</Trigger>
														<Trigger Property="IsDragging" Value="True">
															<Setter Property="Fill" TargetName="Background">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																		<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
																		<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
																		<GradientStop Color="#FF4C8BB4" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
															<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
															<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
															<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="Both">
							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsSelectionRangeEnabled" Value="True">
							<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Slider}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
									<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
									<Border x:Name="TrackBackground" BorderThickness="1" Background="#FFE7EAEA" Grid.Column="1" CornerRadius="1" HorizontalAlignment="Center" Margin="0,5" Width="4">
										<Border.BorderBrush>
											<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
												<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
												<GradientStop Color="White" Offset="0.9"/>
											</LinearGradientBrush>
										</Border.BorderBrush>
										<Canvas Margin="-1,-6">
											<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Visibility="Hidden" Width="4"/>
										</Canvas>
									</Border>
									<Track x:Name="PART_Track" Grid.Column="1">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="Slider.DecreaseLarge">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle Fill="Transparent"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="Slider.IncreaseLarge">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle Fill="Transparent"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb x:Name="Thumb">
												<Thumb.Style>
													<Style TargetType="{x:Type Thumb}">
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="Height" Value="11"/>
														<Setter Property="Width" Value="22"/>
														<Setter Property="Foreground" Value="Gray"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Thumb}">
																	<Canvas SnapsToDevicePixels="True">
																		<Canvas.RenderTransform>
																			<TransformGroup>
																				<RotateTransform Angle="90"/>
																				<TranslateTransform X="11" Y="5.5"/>
																			</TransformGroup>
																		</Canvas.RenderTransform>
																		<Path x:Name="Background" Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z">
																			<Path.Fill>
																				<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																					<GradientStop Color="White" Offset="0"/>
																					<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
																					<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
																				</LinearGradientBrush>
																			</Path.Fill>
																		</Path>
																		<Path x:Name="InnerBorder" Data="M-4,-9.5L4,-9.5 4,9.5 -4,9.5z" Stroke="White" StrokeThickness="1"/>
																		<Path x:Name="OuterBorder" Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z" Stroke="#FF929292" StrokeThickness="1"/>
																	</Canvas>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="Fill" TargetName="Background">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																						<GradientStop Color="White" Offset="0"/>
																						<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																						<GradientStop Color="#FFB0DFF8" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
																		</Trigger>
																		<Trigger Property="Foreground" Value="Blue">
																			<Setter Property="Fill" TargetName="Background">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																						<GradientStop Color="White" Offset="0"/>
																						<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																						<GradientStop Color="#FFB0DFF8" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
																		</Trigger>
																		<Trigger Property="IsDragging" Value="True">
																			<Setter Property="Fill" TargetName="Background">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																						<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
																						<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
																						<GradientStop Color="#FF4C8BB4" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
																		</Trigger>
																		<Trigger Property="IsEnabled" Value="False">
																			<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
																			<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
																			<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Thumb.Style>
											</Thumb>
										</Track.Thumb>
									</Track>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="TickPlacement" Value="TopLeft">
									<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
									<Setter Property="Style" TargetName="Thumb">
										<Setter.Value>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Height" Value="10"/>
												<Setter Property="Width" Value="18"/>
												<Setter Property="Foreground" Value="Gray"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Canvas SnapsToDevicePixels="True">
																<Canvas.RenderTransform>
																	<TransformGroup>
																		<RotateTransform Angle="90"/>
																		<TranslateTransform X="9" Y="5"/>
																	</TransformGroup>
																</Canvas.RenderTransform>
																<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
																	<Path.Fill>
																		<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																			<GradientStop Color="White" Offset="0"/>
																			<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
																			<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
																		</LinearGradientBrush>
																	</Path.Fill>
																</Path>
																<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
																<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
															</Canvas>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																				<GradientStop Color="White" Offset="0"/>
																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
																</Trigger>
																<Trigger Property="Foreground" Value="Blue">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																				<GradientStop Color="White" Offset="0"/>
																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
																</Trigger>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
																				<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
																				<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
																				<GradientStop Color="#FF4C8BB4" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
																	<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
																	<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
									<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
								</Trigger>
								<Trigger Property="TickPlacement" Value="BottomRight">
									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
									<Setter Property="Style" TargetName="Thumb">
										<Setter.Value>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Height" Value="10"/>
												<Setter Property="Width" Value="18"/>
												<Setter Property="Foreground" Value="Gray"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Canvas SnapsToDevicePixels="True">
																<Canvas.RenderTransform>
																	<TransformGroup>
																		<RotateTransform Angle="-90"/>
																		<TranslateTransform X="9" Y="5"/>
																	</TransformGroup>
																</Canvas.RenderTransform>
																<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
																	<Path.Fill>
																		<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
																			<GradientStop Color="White" Offset="0"/>
																			<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
																			<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
																		</LinearGradientBrush>
																	</Path.Fill>
																</Path>
																<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
																<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
															</Canvas>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
																				<GradientStop Color="White" Offset="0"/>
																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
																</Trigger>
																<Trigger Property="Foreground" Value="Blue">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
																				<GradientStop Color="White" Offset="0"/>
																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
																</Trigger>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Fill" TargetName="Background">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
																				<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
																				<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
																				<GradientStop Color="#FF4C8BB4" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
																	<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
																	<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
									<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
								</Trigger>
								<Trigger Property="TickPlacement" Value="Both">
									<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
								</Trigger>
								<Trigger Property="IsSelectionRangeEnabled" Value="True">
									<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="True">
									<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>